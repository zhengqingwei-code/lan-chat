name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"   # Trigger on tag pushes like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]  # Run on both macOS and Windows
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*   # Include all files in the dist directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Separate macOS signing job
  macos-signing:
    needs: build
    runs-on: macos-latest # Now it's directly macOS, no matrix usage

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Setup Apple Developer Certificate
        run: |
          mkdir -p ~/.electron-builder/certs
          echo "${{ secrets.APPLE_CERTIFICATE }}" > ~/.electron-builder/certs/certificate.p12
          echo "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" > ~/.electron-builder/certs/certificate_password.txt
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Build Electron app for macOS
        run: npm run dist -- --mac --publish never
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
